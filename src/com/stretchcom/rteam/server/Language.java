package com.stretchcom.rteam.server;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.StringTokenizer;

public class Language {
    private static final HashMap<String, String> abbreviations = initAbbreviations();

	private static HashMap<String, String> initAbbreviations() {
		HashMap<String, String> abbrMap = new HashMap<String, String>();
    	
		abbrMap.put("sunday", "Sun");
		abbrMap.put("monday", "Mon");
		abbrMap.put("tuesday", "Tue");
		abbrMap.put("wednesday", "Wed");
		abbrMap.put("thursday", "Thu");
		abbrMap.put("friday", "Fri");
		abbrMap.put("saturday", "Sat");
		
		abbrMap.put("january", "Jan");
		abbrMap.put("february", "Feb");
		abbrMap.put("march", "Mar");
		abbrMap.put("april", "Apr");
		abbrMap.put("june", "Jun");
		abbrMap.put("july", "Jul");
		abbrMap.put("august", "Aug");
		abbrMap.put("september", "Sep");
		abbrMap.put("october", "Oct");
		abbrMap.put("november", "Nov");
		abbrMap.put("december", "Dec");
		
		abbrMap.put("north", "N");
		abbrMap.put("northern", "NRN");
		abbrMap.put("south", "S");
		abbrMap.put("southern", "SRN");
		abbrMap.put("east", "E");
		abbrMap.put("eastern", "ERN");
		abbrMap.put("west", "W");
		abbrMap.put("western", "WRN");
		
		abbrMap.put("one", "1");
		abbrMap.put("two", "2");
		abbrMap.put("three", "3");
		abbrMap.put("four", "4");
		abbrMap.put("five", "5");
		abbrMap.put("six", "6");
		abbrMap.put("seven", "7");
		abbrMap.put("eight", "8");
		abbrMap.put("nine", "9");
		abbrMap.put("ten", "10");
		abbrMap.put("twenty", "20");
		abbrMap.put("thirty", "30");
		abbrMap.put("forty", "40");
		abbrMap.put("fifty", "50");
		abbrMap.put("sixty", "60");
		abbrMap.put("seventy", "70");
		abbrMap.put("eighty", "80");
		abbrMap.put("ninty", "90");
		abbrMap.put("hundred", "100");
		abbrMap.put("thousand", "1000");
		
		abbrMap.put("twenties", "20's");
		abbrMap.put("thirties", "30's");
		abbrMap.put("forties", "40's");
		abbrMap.put("fifties", "50's");
		abbrMap.put("sixties", "60's");
		abbrMap.put("seventies", "70's");
		abbrMap.put("eighties", "80's");
		abbrMap.put("ninties", "90's");
		
		abbrMap.put("first", "1st");
		abbrMap.put("second", "2nd");
		abbrMap.put("third", "3rd");
		abbrMap.put("fourth", "4th");
		abbrMap.put("fifth", "5th");
		abbrMap.put("sixth", "6th");
		abbrMap.put("seventh", "7th");
		abbrMap.put("eighth", "8th");
		abbrMap.put("nineth", "9th");
		abbrMap.put("tenth", "10th");
		
		abbrMap.put("black", "blk");
		abbrMap.put("brown", "brn");
		//abbrMap.put("red", "red");
		abbrMap.put("orange", "org");
		abbrMap.put("yellow", "yel");
		abbrMap.put("blue", "blu");
		abbrMap.put("violet", "vio");
		abbrMap.put("gray", "gra");
		abbrMap.put("white", "wht");
		abbrMap.put("pink", "pnk");
		abbrMap.put("green", "grn");
		
		abbrMap.put("alabama", "AL");
		abbrMap.put("alaska", "AK");
		abbrMap.put("arizona", "AZ");
		abbrMap.put("arkansas", "AR");
		abbrMap.put("california", "CA");
		abbrMap.put("colorado", "CO");
		abbrMap.put("connecticutt", "CT");
		abbrMap.put("delaware", "DE");
		abbrMap.put("florida", "FL");
		abbrMap.put("georgia", "GA");
		abbrMap.put("hawaii", "HI");
		abbrMap.put("idaho", "ID");
		abbrMap.put("illinois", "IL");
		abbrMap.put("indiana", "IN");
		abbrMap.put("iowa", "IA");
		abbrMap.put("kansas", "KS");
		abbrMap.put("kentucky", "KY");
		abbrMap.put("louisiana", "LA");
		abbrMap.put("maine", "ME");
		abbrMap.put("maryland", "MD");
		abbrMap.put("massachusetts", "MA");
		abbrMap.put("michigan", "MI");
		abbrMap.put("minnesota", "MN");
		abbrMap.put("mississippi", "MS");
		abbrMap.put("missouri", "MO");
		abbrMap.put("montana", "MT");
		abbrMap.put("nebraska", "NE");
		abbrMap.put("nevada", "NV");
		abbrMap.put("oklahoma", "OK");
		abbrMap.put("oregon", "OR");
		abbrMap.put("pennsylvania", "PA");
		abbrMap.put("tennessee", "TN");
		abbrMap.put("texas", "TX");
		abbrMap.put("utah", "UT");
		abbrMap.put("vermont", "VT");
		abbrMap.put("viginia", "VA");
		abbrMap.put("washington", "WA");
		abbrMap.put("wisconsin", "WI");
		abbrMap.put("wyoming", "WY");
		
		abbrMap.put("abbreviation", "abbr");
		abbrMap.put("abbreviations", "abbr");
		abbrMap.put("absent", "abs");
		abbrMap.put("academy", "acad");
		abbrMap.put("account", "acct");
		abbrMap.put("accounts", "acct");
		abbrMap.put("acknowledge", "ack");
		abbrMap.put("acknowledgement", "ack");
		abbrMap.put("action", "actn");
		abbrMap.put("actions", "actn");
		abbrMap.put("address", "addr");
		abbrMap.put("addresses", "addr");
		abbrMap.put("afternoon", "PM");
		abbrMap.put("agency", "agcy");
		abbrMap.put("agencies", "agcy");
		abbrMap.put("airplane", "plane");
		abbrMap.put("always", "alwys");
		abbrMap.put("analysis", "anal");
		abbrMap.put("and", "&");
		abbrMap.put("anonymous", "anon");
		abbrMap.put("approve", "aprv");
		abbrMap.put("approved", "aprv");
		abbrMap.put("approving", "aprv");
		abbrMap.put("are", "r");
		abbrMap.put("assist", "asst");
		abbrMap.put("assisted", "asst");
		abbrMap.put("assisting", "asst");
		abbrMap.put("assign", "assn");
		abbrMap.put("assigned", "assn");
		abbrMap.put("assigning", "assn");
		abbrMap.put("association", "assc");
		abbrMap.put("associations", "assc");
		abbrMap.put("assistant", "asst");
		abbrMap.put("assistants", "asst");
		abbrMap.put("asked", "ask");
		abbrMap.put("asking", "ask");
		abbrMap.put("assignment", "asgmt");
		abbrMap.put("assignments", "asgmt");
		abbrMap.put("association", "assn");
		abbrMap.put("associations", "assn");
		abbrMap.put("attack", "atck");
		abbrMap.put("attacked", "atck");
		abbrMap.put("attacking", "atck");
		abbrMap.put("attendance", "atnd");
		abbrMap.put("attention", "attn");
		abbrMap.put("authentic", "auth");
		abbrMap.put("authorize", "auth");
		abbrMap.put("authorized", "auth");
		abbrMap.put("automatic", "auto");
		abbrMap.put("automatically", "auto");
		abbrMap.put("automobile", "car");
		abbrMap.put("available", "avl");
		abbrMap.put("avenue", "ave");
		abbrMap.put("average", "avg");
		abbrMap.put("averages", "avg");
		abbrMap.put("award", "awrd");
		abbrMap.put("awarded", "awrd");
		abbrMap.put("awarding", "awrd");
		abbrMap.put("awards", "awrd");
		abbrMap.put("back", "bck");
		abbrMap.put("backed", "bck");
		abbrMap.put("backing", "bck");
		abbrMap.put("backs", "bck");
		abbrMap.put("barbecue", "BBQ");
		abbrMap.put("be", "b");
		abbrMap.put("because", "coz");
		abbrMap.put("bee", "b");
		abbrMap.put("before", "b4");
		abbrMap.put("begin", "begn");
		abbrMap.put("begins", "begn");
		abbrMap.put("beginning", "begn");
		abbrMap.put("behind", "bhnd");
		abbrMap.put("biology", "biol");
		abbrMap.put("birthday", "bday");
		abbrMap.put("blind", "bld");
		abbrMap.put("blinded", "bld");
		abbrMap.put("blinds", "bld");
		abbrMap.put("block", "blk");
		abbrMap.put("blocked", "blk");
		abbrMap.put("blocking", "blkg");
		abbrMap.put("blocks", "blk");
		abbrMap.put("board", "bd");
		abbrMap.put("boards", "bds");
		abbrMap.put("book", "bk");
		abbrMap.put("books", "bk");
		abbrMap.put("bottom", "bot");
		abbrMap.put("boulevard", "blvd");
		abbrMap.put("bound", "bnd");
		abbrMap.put("bounded", "bnd");
		abbrMap.put("bracket", "brkt");
		abbrMap.put("brackets", "brkt");
		abbrMap.put("break", "brk");
		abbrMap.put("breaking", "brk");
		abbrMap.put("brother", "bro");
		abbrMap.put("brothers", "bros");
		abbrMap.put("build", "bld");
		abbrMap.put("building", "bldg");
		abbrMap.put("business", "busn");
		abbrMap.put("busy", "bz");
		abbrMap.put("businesses", "busn");
		abbrMap.put("calendar", "cal");
		abbrMap.put("calendars", "cal");
		abbrMap.put("calculate", "cal");
		abbrMap.put("calculated", "cal");
		abbrMap.put("calculating", "cal");
		abbrMap.put("camera", "cam");
		abbrMap.put("campus", "cmps");
		abbrMap.put("campuses", "cmps");
		abbrMap.put("cancel", "can");
		abbrMap.put("canceled", "can");
		abbrMap.put("cancelled", "can");
		abbrMap.put("canceling", "can");
		abbrMap.put("captain", "capt");
		abbrMap.put("captains", "capt");
		abbrMap.put("category", "catg");
		abbrMap.put("categories", "catg");
		abbrMap.put("caution", "caut");
		abbrMap.put("cautioned", "caut");
		abbrMap.put("center", "ctr");
		abbrMap.put("centers", "ctr");
		abbrMap.put("certificate", "cert");
		abbrMap.put("certificates", "cert");
		abbrMap.put("chapter", "chap");
		abbrMap.put("chapters", "chap");
		abbrMap.put("change", "chg");
		abbrMap.put("changed", "chg");
		abbrMap.put("changing", "chg");
		abbrMap.put("charge", "chrg");
		abbrMap.put("charged", "chrg");
		abbrMap.put("charging", "chrg");
		abbrMap.put("centimeter", "cm");
		abbrMap.put("centimeters", "cm");
		abbrMap.put("certification", "cert");
		abbrMap.put("check", "chk");
		abbrMap.put("checked", "chk");
		abbrMap.put("checking", "chk");
		abbrMap.put("checks", "chk");
		abbrMap.put("champion", "champ");
		abbrMap.put("champions", "champs");
		abbrMap.put("child", "kid");
		abbrMap.put("children", "kids");
		abbrMap.put("church", "ch");
		abbrMap.put("churches", "ch");
		abbrMap.put("chemistry", "chem");
		abbrMap.put("city", "cty");
		abbrMap.put("cities", "cty");
		abbrMap.put("clean", "cln");
		abbrMap.put("cleaned", "cln");
		abbrMap.put("cleaning", "cln");
		abbrMap.put("cleans", "cln");
		abbrMap.put("clear", "clr");
		abbrMap.put("cleared", "clr");
		abbrMap.put("clearing", "clrg");
		abbrMap.put("clears", "clr");
		abbrMap.put("clock", "clk");
		abbrMap.put("clocks", "clks");
		abbrMap.put("cloudy", "cldy");
		abbrMap.put("club", "clb");
		abbrMap.put("clubs", "clb");
		abbrMap.put("coffee", "cofy");
		abbrMap.put("collect", "clct");
		abbrMap.put("collected", "clct");
		abbrMap.put("collecting", "clct");
		abbrMap.put("collects", "clct");
		abbrMap.put("college", "col");
		abbrMap.put("combination", "combo");
		abbrMap.put("combinations", "combos");
		abbrMap.put("command", "cmd");
		abbrMap.put("commanded", "cmd");
		abbrMap.put("commanding", "cmd");
		abbrMap.put("commands", "cmd");
		abbrMap.put("comment", "cmt");
		abbrMap.put("comments", "cmt");
		abbrMap.put("committee", "cmmttee");
		abbrMap.put("committees", "cmmttees");
		abbrMap.put("common", "com");
		abbrMap.put("communication", "comm");
		abbrMap.put("communications", "comm");
		abbrMap.put("company", "co");
		abbrMap.put("companies", "co");
		abbrMap.put("competitor", "cptr");
		abbrMap.put("competitors", "cptr");
		abbrMap.put("complete", "compl");
		abbrMap.put("completed", "compl");
		abbrMap.put("completing", "compl");
		abbrMap.put("completes", "compl");
		abbrMap.put("complex", "cmplx");
		abbrMap.put("component", "cmpt");
		abbrMap.put("components", "cmpt");
		abbrMap.put("condition", "cond");
		abbrMap.put("conditions", "cond");
		abbrMap.put("conference", "conf");
		abbrMap.put("conferences", "confs");
		abbrMap.put("confidential", "cnfd");
		//abbrMap.put("confirm", "confrm");
		//abbrMap.put("confirmed", "confrmed");
		//abbrMap.put("confirming", "conf");
		//abbrMap.put("confirms", "confirms");
		abbrMap.put("congratulations", "congrats");
		abbrMap.put("construction", "constr");
		abbrMap.put("continue", "cont");
		abbrMap.put("continued", "cont");
		abbrMap.put("continuing", "cont");
		abbrMap.put("continues", "cont");
		abbrMap.put("control", "ctrl");
		abbrMap.put("controls", "ctrl");
		abbrMap.put("conversation", "convr");
		abbrMap.put("conversations", "convr");
		abbrMap.put("conversion", "conv");
		abbrMap.put("conversions", "conv");
		abbrMap.put("coordinate", "cord");
		abbrMap.put("coordinated", "cord");
		abbrMap.put("coordinating", "cord");
		abbrMap.put("coordinates", "cord");
		abbrMap.put("coordinator", "cord");
		abbrMap.put("coordinators", "cord");
		abbrMap.put("corner", "crnr");
		abbrMap.put("corners", "crnr");
		abbrMap.put("corporation", "corp");
		abbrMap.put("corporations", "corp");
		abbrMap.put("correspondence", "crsp");
		abbrMap.put("correspondences", "crsp");
		abbrMap.put("cousin", "cuz");
		abbrMap.put("cover", "cvr");
		abbrMap.put("covered", "cvrd");
		abbrMap.put("covering", "cvr");
		abbrMap.put("covers", "cvr");
		abbrMap.put("coverage", "cvrg");
		abbrMap.put("count", "cnt");
		abbrMap.put("counted", "cnt");
		abbrMap.put("counting", "cnt");
		abbrMap.put("counts", "cnt");
		abbrMap.put("country", "co");
		abbrMap.put("countries", "co");
		abbrMap.put("course", "crse");
		abbrMap.put("courses", "crse");
		abbrMap.put("court", "ct");
		abbrMap.put("courts", "ct");
		abbrMap.put("crazy", "CRZ");
		abbrMap.put("create", "CR8");
		abbrMap.put("credit", "crdt");
		abbrMap.put("credits", "crdt");
		abbrMap.put("critical", "crit");
		abbrMap.put("criticism", "crit");
		abbrMap.put("criticisms", "crit");
		abbrMap.put("crossreference", "xref");
		abbrMap.put("crossreferences", "xrefs");
		abbrMap.put("crown", "cwn");
		abbrMap.put("crowns", "cwn");
		abbrMap.put("cubic", "cu");
		abbrMap.put("current", "cur");
		abbrMap.put("currently", "cur");
		abbrMap.put("danger", "dng");
		abbrMap.put("dangers", "dng");
		abbrMap.put("dangerous", "dng");
		abbrMap.put("default", "dflt");
		abbrMap.put("defaulted", "dflt");
		abbrMap.put("defense", "def");
		abbrMap.put("defenses", "def");
		abbrMap.put("defensive", "def");
		abbrMap.put("definition", "defn");
		abbrMap.put("definitions", "defn");
		abbrMap.put("degree", "deg");
		abbrMap.put("degrees", "deg");
		abbrMap.put("delete", "del");
		abbrMap.put("deleted", "del");
		abbrMap.put("deleting", "del");
		abbrMap.put("deletes", "del");
		abbrMap.put("deliver", "dlvr");
		abbrMap.put("delivered", "dlvr");
		abbrMap.put("delivering", "dlvr");
		abbrMap.put("delivers", "dlvr");
		abbrMap.put("department", "dept");
		abbrMap.put("departments", "depts");
		abbrMap.put("description", "descr");
		abbrMap.put("descriptions", "descr");
		abbrMap.put("design", "dsgn");
		abbrMap.put("designed", "dsgn");
		abbrMap.put("designing", "dsgn");
		abbrMap.put("designs", "dsgn");
		abbrMap.put("destination", "dest");
		abbrMap.put("destinations", "dest");
		abbrMap.put("detail", "detl");
		abbrMap.put("details", "detl");
		abbrMap.put("develop", "devel");
		abbrMap.put("developed", "devel");
		abbrMap.put("developing", "devel");
		abbrMap.put("develops", "devel");
		abbrMap.put("development", "devel");
		abbrMap.put("deviate", "dv8");
		abbrMap.put("diagram", "diag");
		abbrMap.put("diagrams", "diag");
		abbrMap.put("dictionary", "dict");
		abbrMap.put("dictionaries", "dict");
		abbrMap.put("difference", "diff");
		abbrMap.put("differences", "diff");
		abbrMap.put("direct", "dir");
		abbrMap.put("directed", "dir");
		abbrMap.put("directing", "dir");
		abbrMap.put("directs", "dir");
		abbrMap.put("direction", "dir");
		abbrMap.put("directions", "dir");
		abbrMap.put("distance", "dist");
		abbrMap.put("distances", "dist");
		abbrMap.put("distinction", "distinct");
		abbrMap.put("distinctions", "distinct");
		abbrMap.put("district", "dist");
		abbrMap.put("districts", "dist");
		abbrMap.put("division", "div");
		abbrMap.put("divisions", "div");
		abbrMap.put("doctor", "Dr");
		abbrMap.put("doctors", "Dr");
		abbrMap.put("document", "doc");
		abbrMap.put("documents", "docs");
		abbrMap.put("dollar", "$");
		abbrMap.put("dollars", "$$");
		abbrMap.put("double", "dbl");
		abbrMap.put("doubled", "dbl");
		abbrMap.put("doubling", "dbl");
		abbrMap.put("doubles", "dbl");
		abbrMap.put("down", "dwn");
		abbrMap.put("downs", "dwn");
		abbrMap.put("dozen", "doz");
		abbrMap.put("dozens", "doz");
		abbrMap.put("drive", "drv");
		abbrMap.put("drove", "drv");
		abbrMap.put("driving", "drv");
		abbrMap.put("drives", "drv");
		abbrMap.put("duplicate", "dup");
		abbrMap.put("duplicated", "dup");
		abbrMap.put("duplicating", "dup");
		abbrMap.put("duplicates", "dup");
		abbrMap.put("each", "ea");
		abbrMap.put("early", "erly");
		abbrMap.put("earlier", "erly");
		abbrMap.put("easy", "EZ");
		abbrMap.put("education", "edu");
		abbrMap.put("effort", "efrt");
		abbrMap.put("efforts", "efrt");
		abbrMap.put("ejection", "ejn");
		abbrMap.put("ejections", "ejn");
		abbrMap.put("elect", "elct");
		abbrMap.put("elected", "elct");
		abbrMap.put("electing", "elct");
		abbrMap.put("elects", "elct");
		abbrMap.put("eligible", "elig");
		abbrMap.put("elimination", "elim");
		abbrMap.put("emergency", "emerg");
		abbrMap.put("emergencies", "emerg");
		abbrMap.put("emphasis", "emph");
		abbrMap.put("engineer", "eng");
		abbrMap.put("engineered", "eng");
		abbrMap.put("engineering", "eng");
		abbrMap.put("engineers", "eng");
		abbrMap.put("english", "engl");
		abbrMap.put("enough", "enuf");
		abbrMap.put("enrollment", "enrl");
		abbrMap.put("equal", "=");
		abbrMap.put("equaled", "=");
		abbrMap.put("equaling", "=");
		abbrMap.put("equals", "=");
		abbrMap.put("error", "err");
		abbrMap.put("errors", "errs");
		abbrMap.put("especially", "esp");
		abbrMap.put("establish", "est");
		abbrMap.put("established", "est");
		abbrMap.put("establishing", "est");
		abbrMap.put("establishes", "est");
		abbrMap.put("estimate", "est");
		abbrMap.put("estimated", "est");
		abbrMap.put("estimating", "est");
		abbrMap.put("estimates", "est");
		abbrMap.put("evaluate", "eval");
		abbrMap.put("evaluated", "eval");
		abbrMap.put("evaluating", "eval");
		abbrMap.put("evaluates", "eval");
		abbrMap.put("evaluation", "eval");
		abbrMap.put("event", "evnt");
		abbrMap.put("events", "evnt");
		abbrMap.put("everywhere", "evrywhr");
		abbrMap.put("example", "ex");
		abbrMap.put("examples", "ex");
		abbrMap.put("excellent", "xlnt");
		abbrMap.put("exception", "excp");
		abbrMap.put("exceptions", "excp");
		abbrMap.put("exclude", "excl");
		abbrMap.put("excluded", "excl");
		abbrMap.put("excluding", "excl");
		abbrMap.put("excludes", "excl");
		abbrMap.put("exercise", "exerc");
		abbrMap.put("exercised", "exerc");
		abbrMap.put("exercising", "exerc");
		abbrMap.put("exercises", "exerc");
		abbrMap.put("execute", "exec");
		abbrMap.put("executed", "exec");
		abbrMap.put("executing", "exec");
		abbrMap.put("executes", "exec");
		abbrMap.put("exempt", "exmt");
		abbrMap.put("expert", "xpert");
		abbrMap.put("experts", "xperts");
		abbrMap.put("expedite", "xpdt");
		abbrMap.put("expedited", "xpdt");
		abbrMap.put("expediting", "xpdt");
		abbrMap.put("expedites", "xpdt");
		abbrMap.put("expense", "exp");
		abbrMap.put("expenses", "exp");
		abbrMap.put("expiration", "expr");
		abbrMap.put("expire", "expr");
		abbrMap.put("expired", "expr");
		abbrMap.put("expiring", "expr");
		abbrMap.put("expired", "expr");
		abbrMap.put("extend", "ext");
		abbrMap.put("extended", "ext");
		abbrMap.put("extending", "ext");
		abbrMap.put("extends", "ext");
		abbrMap.put("extra", "xtra");
		abbrMap.put("extras", "xtras");
		abbrMap.put("fabulous", "fab");
		abbrMap.put("false", "fls");
		abbrMap.put("family", "fmly");
		abbrMap.put("families", "fmly");
		abbrMap.put("fanatic", "fan");
		abbrMap.put("fanatics", "fans");
		abbrMap.put("fast", "fst");
		abbrMap.put("faster", "fst");
		abbrMap.put("fastest", "fst");
		abbrMap.put("fate", "f8");
		abbrMap.put("father", "dad");
		abbrMap.put("fathers", "dads");
		abbrMap.put("federal", "fed");
		abbrMap.put("federation", "fed");
		abbrMap.put("federations", "fed");
		abbrMap.put("feedback", "fdbk");
		abbrMap.put("feet", "ft");
		abbrMap.put("female", "fem");
		abbrMap.put("females", "fem");
		abbrMap.put("field", "fld");
		abbrMap.put("fielded", "fld");
		abbrMap.put("fielding", "fld");
		abbrMap.put("fields", "fld");
		abbrMap.put("fielder", "fldr");
		abbrMap.put("figure", "fig");
		abbrMap.put("figured", "fig");
		abbrMap.put("figuring", "fig");
		abbrMap.put("figures", "fig");
		abbrMap.put("final", "fnl");
		abbrMap.put("finals", "fnl");
		abbrMap.put("floor", "flr");
		abbrMap.put("floors", "flr");
		abbrMap.put("fluid", "fl");
		abbrMap.put("fluids", "fl");
		abbrMap.put("focus", "foc");
		abbrMap.put("focused", "foc");
		abbrMap.put("focusing", "foc");
		abbrMap.put("focuses", "foc");
		abbrMap.put("foot", "ft");
		abbrMap.put("for", "4");
		abbrMap.put("forever", "4ever");
		abbrMap.put("foreward", "fwd");
		abbrMap.put("forewards", "fwd");
		abbrMap.put("forget", "4get");
		abbrMap.put("fortunate", "4tun8");
		abbrMap.put("form", "frm");
		abbrMap.put("forms", "frm");
		abbrMap.put("forward", "4wrd");
		abbrMap.put("forwards", "4wrds");
		abbrMap.put("frame", "frm");
		abbrMap.put("frames", "frm");
		abbrMap.put("frequency", "freq");
		abbrMap.put("frequencies", "freq");
		abbrMap.put("frequent", "freq");
		abbrMap.put("frequently", "freq");
		abbrMap.put("freeze", "frz");
		abbrMap.put("friends", "frens");
		abbrMap.put("frooze", "frz");
		abbrMap.put("freezing", "frzg");
		abbrMap.put("freezes", "frz");
		abbrMap.put("from", "frm");
		abbrMap.put("fullback", "FB");
		abbrMap.put("fullbacks", "FB");
		abbrMap.put("function", "fcn");
		abbrMap.put("functions", "fcn");
		abbrMap.put("future", "fut");
		abbrMap.put("futures", "fut");
		abbrMap.put("gallon", "gal");
		abbrMap.put("gallons", "gal");
		abbrMap.put("garbage", "garb");
		abbrMap.put("general", "gen");
		abbrMap.put("generals", "gen");
		abbrMap.put("generally", "gen");
		abbrMap.put("glove", "glv");
		abbrMap.put("gloves", "glvs");
		abbrMap.put("goodbye", "bye");
		abbrMap.put("government", "govt");
		abbrMap.put("governments", "govt");
		abbrMap.put("ground", "grnd");
		abbrMap.put("grounded", "grnd");
		abbrMap.put("group", "grp");
		abbrMap.put("groups", "grp");
		abbrMap.put("guarantee", "guar");
		abbrMap.put("guaranteed", "guar");
		abbrMap.put("guaranteeing", "guar");
		abbrMap.put("guarantees", "guar");
		abbrMap.put("guard", "grd");
		abbrMap.put("guarded", "grd");
		abbrMap.put("guarding", "grd");
		abbrMap.put("guards", "grd");
		abbrMap.put("gynasium", "gym");
		abbrMap.put("gynasiums", "gyms");
		abbrMap.put("halfback", "HB");
		abbrMap.put("halfbacks", "HBs");
		abbrMap.put("handle", "hdl");
		abbrMap.put("handled", "hdl");
		abbrMap.put("handling", "hdl");
		abbrMap.put("handles", "hdl");
		abbrMap.put("hazard", "haz");
		abbrMap.put("hazards", "haz");
		abbrMap.put("header", "hdr");
		abbrMap.put("headers", "hdr");
		abbrMap.put("health", "hlth");
		abbrMap.put("heavy", "hvy");
		abbrMap.put("height", "ht");
		abbrMap.put("heights", "ht");
		abbrMap.put("help", "hlp");
		abbrMap.put("helped", "hlp");
		abbrMap.put("helping", "hlp");
		abbrMap.put("helps", "hlp");
		abbrMap.put("high", "hi");
		abbrMap.put("highs", "hi");
		abbrMap.put("highschool", "HS");
		abbrMap.put("highschools", "HS");
		abbrMap.put("highway", "hwy");
		abbrMap.put("highways", "hwy");
		abbrMap.put("history", "hist");
		abbrMap.put("hold", "hld");
		abbrMap.put("held", "hld");
		abbrMap.put("holding", "hldg");
		abbrMap.put("holds", "hld");
		abbrMap.put("homerun", "HR");
		abbrMap.put("homeruns", "HRs");
		abbrMap.put("homework", "hmwk");
		abbrMap.put("hospital", "hosp");
		abbrMap.put("hospitals", "hosp");
		abbrMap.put("hour", "hr");
		abbrMap.put("hours", "hr");
		abbrMap.put("implement", "impl");
		abbrMap.put("implemented", "impl");
		abbrMap.put("implementing", "impl");
		abbrMap.put("implements", "impl");
		abbrMap.put("include", "incl");
		abbrMap.put("included", "incl");
		abbrMap.put("including", "incl");
		abbrMap.put("includes", "incl");
		abbrMap.put("incomplete", "incompl");
		abbrMap.put("incorporated", "inc");
		abbrMap.put("inch", "in");
		abbrMap.put("inches", "in");
		abbrMap.put("increase", "incr");
		abbrMap.put("increased", "incr");
		abbrMap.put("increasing", "incr");
		abbrMap.put("increases", "incr");
		abbrMap.put("indefinite", "indef");
		abbrMap.put("individual", "indv");
		abbrMap.put("individuals", "indv");
		abbrMap.put("insurance", "ins");
		abbrMap.put("influenced", "infl");
		abbrMap.put("information", "info");
		abbrMap.put("initial", "init");
		abbrMap.put("initiate", "init");
		abbrMap.put("initiated", "init");
		abbrMap.put("initiating", "init");
		abbrMap.put("initiates", "init");
		abbrMap.put("injury", "inj");
		abbrMap.put("injuries", "inj");
		abbrMap.put("input", "inpt");
		abbrMap.put("inputs", "inpt");
		abbrMap.put("inquire", "inq");
		abbrMap.put("inquired", "inq");
		abbrMap.put("inquiring", "inq");
		abbrMap.put("inquires", "inq");
		abbrMap.put("inquiry", "inq");
		abbrMap.put("inside", "ins");
		abbrMap.put("instructor", "instr");
		abbrMap.put("instructors", "instr");
		abbrMap.put("instruction", "instr");
		abbrMap.put("instructions", "instr");
		abbrMap.put("insurance", "ins");
		abbrMap.put("interference", "intrf");
		abbrMap.put("interferences", "intrf");
		abbrMap.put("international", "intl");
		abbrMap.put("irregular", "irreg");
		abbrMap.put("journal", "jour");
		abbrMap.put("journals", "jour");
		abbrMap.put("jump", "jmp");
		abbrMap.put("jumped", "jmp");
		abbrMap.put("jumping", "jmp");
		abbrMap.put("jumped", "jmp");
		abbrMap.put("junior", "jr");
		abbrMap.put("kilometer", "km");
		abbrMap.put("kilometers", "km");
		abbrMap.put("knowledge", "knowl");
		abbrMap.put("label", "lbl");
		abbrMap.put("labels", "lbl");
		abbrMap.put("lane", "ln");
		abbrMap.put("lanes", "ln");
		abbrMap.put("large", "lrg");
		abbrMap.put("language", "lng");
		abbrMap.put("languages", "lng");
		abbrMap.put("last", "lst");
		abbrMap.put("later", "l8r");
		abbrMap.put("latitude", "lat");
		abbrMap.put("league", "leag");
		abbrMap.put("leagues", "leag");
		abbrMap.put("leave", "lv");
		//abbrMap.put("left", "lv");
		abbrMap.put("leaving", "lv");
		abbrMap.put("leaves", "lv");
		abbrMap.put("letter", "ltr");
		abbrMap.put("letters", "ltr");
		abbrMap.put("level", "lvl");
		abbrMap.put("leveled", "lvl");
		abbrMap.put("leveling", "lvl");
		abbrMap.put("levels", "lvl");
		abbrMap.put("library", "lib");
		abbrMap.put("libraries", "libs");
		abbrMap.put("limited", "ltd");
		abbrMap.put("line", "ln");
		abbrMap.put("lines", "ln");
		abbrMap.put("listen", "lstn");
		abbrMap.put("listened", "lstn");
		abbrMap.put("listening", "lstn");
		abbrMap.put("listens", "lstn");
		abbrMap.put("location", "loc");
		abbrMap.put("locations", "loc");
		abbrMap.put("longitude", "long");
		abbrMap.put("machine", "mach");
		abbrMap.put("machines", "mach");
		abbrMap.put("macintosh", "mac");
		abbrMap.put("macintoshes", "macs");
		abbrMap.put("magazine", "mag");
		abbrMap.put("magazines", "mag");
		abbrMap.put("maintenance", "maint");
		abbrMap.put("major", "mjr");
		abbrMap.put("majored", "mjr");
		abbrMap.put("majoring", "mjr");
		abbrMap.put("majors", "mjr");
		abbrMap.put("management", "mgmt");
		abbrMap.put("manager", "mgr");
		abbrMap.put("managers", "mgrs");
		abbrMap.put("maximum", "max");
		abbrMap.put("mechanical", "mech");
		abbrMap.put("mechanics", "mech");
		abbrMap.put("meeting", "mtg");
		abbrMap.put("meetings", "mtgs");
		abbrMap.put("member", "mbr");
		abbrMap.put("members", "mbrs");
		abbrMap.put("membership", "mbrshp");
		abbrMap.put("message", "msg");
		abbrMap.put("messages", "msgs");
		abbrMap.put("meter", "m");
		abbrMap.put("meters", "m");
		abbrMap.put("middle", "mid");
		abbrMap.put("midfield", "midfld");
		abbrMap.put("midfielder", "M");
		abbrMap.put("midfielders", "M");
		abbrMap.put("mile", "mi");
		abbrMap.put("miles", "mi");
		abbrMap.put("minimum", "min");
		abbrMap.put("minute", "min");
		abbrMap.put("minutes", "mins");
		abbrMap.put("miscellaneous", "misc");
		abbrMap.put("mister", "Mr");
		abbrMap.put("model", "mdl");
		abbrMap.put("modeled", "mdl");
		abbrMap.put("modeling", "mdl");
		abbrMap.put("models", "mdl");
		abbrMap.put("modern", "mod");
		abbrMap.put("month", "mo");
		abbrMap.put("months", "mo");
		abbrMap.put("morning", "AM");
		abbrMap.put("mornings", "AMs");
		abbrMap.put("mother", "mom");
		abbrMap.put("mothers", "moms");
		abbrMap.put("mountain", "mt");
		abbrMap.put("mountains", "mts");
		abbrMap.put("move", "mv");
		abbrMap.put("moved", "mv");
		abbrMap.put("moving", "mv");
		abbrMap.put("moves", "mv");
		abbrMap.put("movement", "mvmt");
		abbrMap.put("movements", "mvmt");
		abbrMap.put("music", "mus");
		abbrMap.put("mystery", "myst");
		abbrMap.put("mysteries", "myst");
		abbrMap.put("name", "nme");
		abbrMap.put("names", "nme");
		abbrMap.put("national", "natl");
		abbrMap.put("navigate", "nav");
		abbrMap.put("navigated", "nav");
		abbrMap.put("navigating", "nav");
		abbrMap.put("navigates", "nav");
		abbrMap.put("navigation", "nav");
		abbrMap.put("necessary", "nec");
		abbrMap.put("negative", "neg");
		abbrMap.put("negatives", "neg");
		abbrMap.put("neutral", "neut");
		abbrMap.put("never", "NVR");
		abbrMap.put("newspaper", "paper");
		abbrMap.put("newspapers", "papers");
		abbrMap.put("next", "nxt");
		abbrMap.put("night", "ngt");
		abbrMap.put("nights", "ngt");
		abbrMap.put("number", "#");
		abbrMap.put("numbers", "#'s");
		abbrMap.put("object", "obj");
		abbrMap.put("objects", "objs");
		abbrMap.put("obsolete", "obs");
		abbrMap.put("obstruction", "obstr");
		abbrMap.put("obstructions", "obstr");
		abbrMap.put("offense", "off");
		abbrMap.put("offenses", "off");
		abbrMap.put("official", "ofcl");
		abbrMap.put("officials", "ofcls");
		abbrMap.put("option", "opt");
		abbrMap.put("options", "opts");
		abbrMap.put("organize", "org");
		abbrMap.put("organization", "org");
		abbrMap.put("organizations", "orgs");
		abbrMap.put("orientate", "ornt");
		abbrMap.put("orientated", "ornt");
		abbrMap.put("orientating", "ornt");
		abbrMap.put("orientates", "ornt");
		abbrMap.put("orientation", "ornt");
		abbrMap.put("original", "orig");
		abbrMap.put("originals", "origs");
		abbrMap.put("originally", "orig");
		abbrMap.put("other", "othr");
		abbrMap.put("others", "othr");
		abbrMap.put("overtime", "OT");
		abbrMap.put("ounce", "oz");
		abbrMap.put("ounces", "oz");
		abbrMap.put("our", "r");
		abbrMap.put("outside", "out");
		abbrMap.put("owner", "ownr");
		abbrMap.put("owners", "ownr");
		abbrMap.put("page", "pg");
		abbrMap.put("pages", "pp");
		abbrMap.put("parent", "prnt");
		abbrMap.put("parents", "prnts");
		abbrMap.put("party", "prty");
		abbrMap.put("parties", "prty");
		abbrMap.put("percent", "%");
		abbrMap.put("percentage", "%");
		abbrMap.put("percentages", "%");
		abbrMap.put("perfect", "perfct");
		abbrMap.put("perfected", "perfct");
		abbrMap.put("perfecting", "perfct");
		abbrMap.put("perfects", "perfct");
		abbrMap.put("perform", "perf");
		abbrMap.put("performed", "perf");
		abbrMap.put("performing", "perf");
		abbrMap.put("performs", "perf");
		abbrMap.put("performance", "perf");
		abbrMap.put("period", "per");
		abbrMap.put("periods", "per");
		abbrMap.put("permanent", "perm");
		abbrMap.put("permission", "permn");
		abbrMap.put("person", "pers");
		abbrMap.put("personal", "psnl");
		abbrMap.put("philosopy", "philos");
		abbrMap.put("philosopy", "philos");
		abbrMap.put("phone", "phn");
		abbrMap.put("phones", "phn");
		abbrMap.put("phrase", "phr");
		abbrMap.put("phrased", "phr");
		abbrMap.put("phrasing", "phr");
		abbrMap.put("phrases", "phr");
		abbrMap.put("pick-up", "P/U");
		abbrMap.put("pickup", "P/U");
		abbrMap.put("picture", "pict");
		abbrMap.put("pitcher", "P");
		abbrMap.put("pitchers", "Ps");
		abbrMap.put("photograph", "photo");
		abbrMap.put("photographs", "photos");
		abbrMap.put("physical", "phys");
		abbrMap.put("place", "plce");
		abbrMap.put("placed", "plce");
		abbrMap.put("placing", "plce");
		abbrMap.put("places", "plce");
		abbrMap.put("plan", "pln");
		abbrMap.put("planned", "pln");
		abbrMap.put("planning", "pln");
		abbrMap.put("plans", "pln");
		abbrMap.put("pledge", "pldg");
		abbrMap.put("pledged", "pldg");
		abbrMap.put("pledging", "pldg");
		abbrMap.put("pledges", "pldg");
		abbrMap.put("plate", "pl");
		abbrMap.put("plates", "pl");
		abbrMap.put("play", "ply");
		abbrMap.put("played", "ply");
		abbrMap.put("playing", "plyng");
		abbrMap.put("plays", "ply");
		abbrMap.put("please", "plz");
		abbrMap.put("point", "pt");
		abbrMap.put("points", "pts");
		abbrMap.put("policy", "plcy");
		abbrMap.put("policies", "plcy");
		abbrMap.put("popular", "pop");
		abbrMap.put("population", "pop");
		abbrMap.put("positive", "pos");
		abbrMap.put("positives", "pos");
		abbrMap.put("position", "posn");
		abbrMap.put("positioned", "posn");
		abbrMap.put("positioning", "posn");
		abbrMap.put("positions", "posn");
		abbrMap.put("possession", "poss");
		abbrMap.put("possessions", "poss");
		abbrMap.put("postponed", "ppnd");
		abbrMap.put("potential", "potn");
		abbrMap.put("power", "pwr");
		abbrMap.put("powered", "pwr");
		abbrMap.put("powering", "pwr");
		abbrMap.put("powers", "pwr");
		abbrMap.put("practice", "prac");
		abbrMap.put("practices", "prac");
		abbrMap.put("preference", "pref");
		abbrMap.put("preferences", "pref");
		abbrMap.put("present", "pres");
		abbrMap.put("presents", "pres");
		abbrMap.put("pressure", "press");
		abbrMap.put("pressured", "press");
		abbrMap.put("pressuring", "press");
		abbrMap.put("pressures", "press");
		abbrMap.put("primary", "prim");
		abbrMap.put("principal", "prin");
		abbrMap.put("principals", "prin");
		abbrMap.put("principle", "prin");
		abbrMap.put("principles", "prin");
		abbrMap.put("probably", "prob");
		abbrMap.put("problem", "prob");
		abbrMap.put("problems", "prob");
		abbrMap.put("professional", "pro");
		abbrMap.put("professionals", "pros");
		abbrMap.put("program", "prog");
		abbrMap.put("programed", "prog");
		abbrMap.put("programming", "prog");
		abbrMap.put("programs", "prog");
		abbrMap.put("properly", "prop");
		abbrMap.put("psychology", "psych");
		abbrMap.put("public", "pub");
		abbrMap.put("purchase", "pur");
		abbrMap.put("purchased", "pur");
		abbrMap.put("purchasing", "pur");
		abbrMap.put("purchases", "pur");
		abbrMap.put("quality", "qlty");
		abbrMap.put("qualities", "qlty");
		abbrMap.put("quart", "qt");
		abbrMap.put("quarts", "qts");
		abbrMap.put("quarter", "qtr");
		abbrMap.put("quarters", "qtr");
		abbrMap.put("quarterback", "QB");
		abbrMap.put("quarterbacks", "QBs");
		abbrMap.put("question", "?");
		abbrMap.put("questions", "??");
		abbrMap.put("quick", "qik");
		abbrMap.put("quiet", "QT");
		abbrMap.put("rank", "rnk");
		abbrMap.put("ranked", "rnk");
		abbrMap.put("ranking", "rnk");
		abbrMap.put("ranks", "rnk");
		abbrMap.put("railroad", "RR");
		abbrMap.put("railroads", "RRs");
		abbrMap.put("reason", "rsn");
		abbrMap.put("reasons", "rsn");
		abbrMap.put("rebound", "rebnd");
		abbrMap.put("rebounds", "rebnds");
		abbrMap.put("recall", "rc'");
		abbrMap.put("recalled", "rc'");
		abbrMap.put("recalling", "rc'");
		abbrMap.put("recalls", "rc'");
		abbrMap.put("receipt", "rcpt'");
		abbrMap.put("receipts", "rcpt'");
		abbrMap.put("receive", "recv");
		abbrMap.put("received", "recv");
		abbrMap.put("receiving", "recv");
		abbrMap.put("receives", "recv");
		abbrMap.put("reciever", "recvr");
		abbrMap.put("recievers", "recvr");
		abbrMap.put("recommend", "rcmd");
		abbrMap.put("recommended", "rcmd");
		abbrMap.put("recommending", "rcmd");
		abbrMap.put("recommends", "rcmd");
		abbrMap.put("record", "rec");
		abbrMap.put("recorded", "rec");
		abbrMap.put("recording", "rec");
		abbrMap.put("records", "rec");
		abbrMap.put("recovery", "recov");
		abbrMap.put("recruit", "rcrt");
		abbrMap.put("recruited", "rcrt");
		abbrMap.put("recruiting", "rcrt");
		abbrMap.put("recruits", "rcrt");
		abbrMap.put("reduce", "red");
		abbrMap.put("reduced", "red");
		abbrMap.put("reducing", "red");
		abbrMap.put("reduces", "red");
		abbrMap.put("refer", "ref");
		abbrMap.put("referred", "ref");
		abbrMap.put("referring", "ref");
		abbrMap.put("refers", "ref");
		abbrMap.put("referal", "ref");
		abbrMap.put("referals", "ref");
		abbrMap.put("reference", "ref");
		abbrMap.put("referenced", "ref");
		abbrMap.put("referencing", "ref");
		abbrMap.put("references", "ref");
		abbrMap.put("referee", "ref");
		abbrMap.put("referees", "refs");
		abbrMap.put("register", "reg");
		abbrMap.put("registered", "reg");
		abbrMap.put("registering", "reg");
		abbrMap.put("registers", "reg");
		abbrMap.put("refund", "rfnd");
		abbrMap.put("refunded", "rfnd");
		abbrMap.put("refunding", "rfnd");
		abbrMap.put("refunds", "rfnd");
		abbrMap.put("regional", "rgnl");
		abbrMap.put("registration", "reg");
		abbrMap.put("regular", "reg");
		abbrMap.put("release", "rlse");
		abbrMap.put("released", "rlse");
		abbrMap.put("releasing", "rlse");
		abbrMap.put("releases", "rlse");
		abbrMap.put("remaining", "rmng");
		abbrMap.put("reminder", "rmdr");
		abbrMap.put("reminders", "rmdr");
		abbrMap.put("remove", "rmv");
		abbrMap.put("removed", "rmvd");
		abbrMap.put("removing", "rmv");
		abbrMap.put("removes", "rmv");
		abbrMap.put("renewal", "rnwl");
		abbrMap.put("replace", "repl");
		abbrMap.put("replaced", "repl");
		abbrMap.put("replacing", "repl");
		abbrMap.put("replaces", "repl");
		abbrMap.put("replacement", "repl");
		abbrMap.put("reply", "rply");
		abbrMap.put("replies", "rply");
		abbrMap.put("report", "rpt");
		abbrMap.put("reported", "rpt");
		abbrMap.put("reporting", "rpt");
		abbrMap.put("reports", "rpt");
		abbrMap.put("representative", "repr");
		abbrMap.put("representatives", "repr");
		abbrMap.put("representing", "repr");
		abbrMap.put("request", "req");
		abbrMap.put("requested", "req");
		abbrMap.put("requesting", "req");
		abbrMap.put("requests", "req");
		abbrMap.put("require", "req");
		abbrMap.put("required", "req");
		abbrMap.put("requiring", "req");
		abbrMap.put("requires", "req");
		abbrMap.put("requisition", "req");
		abbrMap.put("requisitions", "req");
		abbrMap.put("requirement", "rqmt");
		abbrMap.put("requirements", "rqmt");
		abbrMap.put("reserve", "rsrv");
		abbrMap.put("reserved", "rsrv");
		abbrMap.put("reserving", "rsrv");
		abbrMap.put("reserves", "rsrv");
		abbrMap.put("reschedule", "resched");
		abbrMap.put("rescheduled", "resched");
		abbrMap.put("rescheduling", "resched");
		abbrMap.put("reschedules", "resched");
		abbrMap.put("research", "res");
		abbrMap.put("resident", "rsdt");
		abbrMap.put("residents", "rsdt");
		abbrMap.put("respond", "rspd");
		abbrMap.put("responded", "rspd");
		abbrMap.put("responding", "rspd");
		abbrMap.put("responds", "rspd");
		abbrMap.put("response", "resp");
		abbrMap.put("responses", "resp");
		abbrMap.put("result", "rslt");
		abbrMap.put("results", "rslt");
		abbrMap.put("return", "rtn");
		abbrMap.put("returned", "rtn");
		abbrMap.put("returning", "rtn");
		abbrMap.put("returns", "rtn");
		abbrMap.put("review", "rev");
		abbrMap.put("reviewed", "rev");
		abbrMap.put("reviewing", "rev");
		abbrMap.put("reviews", "rev");
		abbrMap.put("revised", "rev");
		abbrMap.put("revoke", "revk");
		abbrMap.put("revoked", "revk");
		abbrMap.put("revoking", "revk");
		abbrMap.put("revokes", "revk");
		abbrMap.put("river", "riv");
		abbrMap.put("rivers", "riv");
		abbrMap.put("road", "rd");
		abbrMap.put("roads", "rd");
		abbrMap.put("room", "rm");
		abbrMap.put("rooms", "rm");
		abbrMap.put("round", "rnd");
		abbrMap.put("rounded", "rnd");
		abbrMap.put("rounding", "rnd");
		abbrMap.put("rounds", "rnd");
		abbrMap.put("route", "rte");
		abbrMap.put("routed", "rte");
		abbrMap.put("routing", "rte");
		abbrMap.put("routes", "rte");
		abbrMap.put("running", "run");
		abbrMap.put("sacrafice", "sac");
		abbrMap.put("sacrafices", "sac");
		abbrMap.put("saint", "St");
		abbrMap.put("saints", "St");
		abbrMap.put("salary", "sal");
		abbrMap.put("salaries", "sal");
		abbrMap.put("school", "sch");
		abbrMap.put("schools", "sch");
		abbrMap.put("schedule", "sched");
		abbrMap.put("scheduled", "sched");
		abbrMap.put("scheduling", "sched");
		abbrMap.put("schedules", "sched");
		abbrMap.put("score", "sc");
		abbrMap.put("scored", "sc");
		abbrMap.put("scoring", "sc");
		abbrMap.put("scores", "sc");
		abbrMap.put("sea", "c");
		abbrMap.put("search", "srch");
		abbrMap.put("searched", "srch");
		abbrMap.put("searching", "srch");
		abbrMap.put("searches", "srch");
		abbrMap.put("seconds", "secs");
		abbrMap.put("section", "sctn");
		abbrMap.put("sections", "sctn");
		abbrMap.put("see", "c");
		abbrMap.put("select", "sel");
		abbrMap.put("selected", "sel");
		abbrMap.put("selecting", "sel");
		abbrMap.put("selects", "sel");
		abbrMap.put("selection", "sel");
		abbrMap.put("send", "snd");
		abbrMap.put("sent", "snt");
		abbrMap.put("sending", "snding");
		abbrMap.put("sends", "snds");
		abbrMap.put("senior", "sr");
		abbrMap.put("seniors", "sr");
		abbrMap.put("sequence", "seq");
		abbrMap.put("sequences", "seq");
		abbrMap.put("series", "ser");
		abbrMap.put("service", "serv");
		abbrMap.put("service", "serv");
		abbrMap.put("shortstop", "SS");
		abbrMap.put("shortstops", "SS");
		abbrMap.put("shoulder", "shldr");
		abbrMap.put("shoulders", "shldr");
		abbrMap.put("shower", "shwr");
		abbrMap.put("showered", "shwr");
		abbrMap.put("showering", "shwr");
		abbrMap.put("showers", "shwrs");
		abbrMap.put("sign", "sgn");
		abbrMap.put("signed", "sgn");
		abbrMap.put("signing", "sgn");
		abbrMap.put("signs", "sgn");
		abbrMap.put("single", "sgl");
		abbrMap.put("singles", "sgl");
		abbrMap.put("sister", "sis");
		abbrMap.put("situation", "sitn");
		abbrMap.put("situations", "sitn");
		abbrMap.put("size", "sz");
		abbrMap.put("sized", "sz");
		abbrMap.put("sizing", "sz");
		abbrMap.put("sizes", "sz");
		abbrMap.put("skill", "skl");
		abbrMap.put("skills", "skl");
		abbrMap.put("skip", "skp");
		abbrMap.put("skipped", "skp");
		abbrMap.put("skiping", "skp");
		abbrMap.put("skips", "skp");
		abbrMap.put("sleep", "Z's");
		abbrMap.put("small", "sml");
		abbrMap.put("society", "soc");
		abbrMap.put("sociology", "sociol");
		abbrMap.put("soft", "sft");
		abbrMap.put("source", "src");
		abbrMap.put("sources", "src");
		abbrMap.put("Spanish", "Sp");
		abbrMap.put("special", "spcl");
		abbrMap.put("specifically", "spec");
		abbrMap.put("specification", "spec");
		abbrMap.put("specifications", "specs");
		abbrMap.put("spell", "sp");
		abbrMap.put("spelled", "sp");
		abbrMap.put("spelling", "sp");
		abbrMap.put("spells", "sp");
		abbrMap.put("sponsor", "spon");
		abbrMap.put("sponsors", "spon");
		abbrMap.put("spread", "sprd");
		abbrMap.put("spreading", "sprd");
		abbrMap.put("spreads", "sprd");
		abbrMap.put("spring", "spring");
		abbrMap.put("square", "sq");
		abbrMap.put("squares", "sq");
		abbrMap.put("stage", "stg");
		abbrMap.put("staged", "stg");
		abbrMap.put("staging", "stg");
		abbrMap.put("stages", "stg");
		abbrMap.put("stadium", "stdm");
		abbrMap.put("stadiums", "stdm");
		abbrMap.put("staff", "stf");
		abbrMap.put("standard", "std");
		abbrMap.put("standards", "std");
		abbrMap.put("standardize", "std");
		abbrMap.put("standing", "stand");
		abbrMap.put("start", "strt");
		abbrMap.put("started", "strt");
		abbrMap.put("starting", "strts");
		abbrMap.put("starts", "strt");
		abbrMap.put("statement", "stmt");
		abbrMap.put("statements", "stmt");
		abbrMap.put("strategic", "strat");
		abbrMap.put("structure", "struct");
		abbrMap.put("structures", "struct");
		abbrMap.put("strike", "stk");
		abbrMap.put("strikes", "stk");
		abbrMap.put("strikeout", "stkout");
		abbrMap.put("stop", "stp");
		abbrMap.put("stopped", "stp");
		abbrMap.put("stopping", "stp");
		abbrMap.put("stops", "stp");
		abbrMap.put("storm", "stm");
		abbrMap.put("storms", "stm");
		abbrMap.put("straight", "str8");
		abbrMap.put("street", "st");
		abbrMap.put("streets", "st");
		abbrMap.put("stretch", "strch");
		abbrMap.put("stretched", "strch");
		abbrMap.put("stretches", "strch");
		abbrMap.put("stretching", "strch");
		abbrMap.put("strong", "str");
		abbrMap.put("structure", "struct");
		abbrMap.put("structures", "struct");
		abbrMap.put("subject", "subj");
		abbrMap.put("subjects", "subj");
		abbrMap.put("substitute", "sub");
		abbrMap.put("substituted", "sub");
		abbrMap.put("substituting", "sub");
		abbrMap.put("substitutes", "subs");
		abbrMap.put("subordinate", "subord");
		abbrMap.put("subordinates", "subord");
		abbrMap.put("suburbs", "burbs");
		abbrMap.put("success", "sc$");
		abbrMap.put("summer", "sum");
		abbrMap.put("superlative", "superl");
		abbrMap.put("superlatives", "superl");
		abbrMap.put("supplement", "suppl");
		abbrMap.put("supplemented", "suppl");
		abbrMap.put("supplementing", "suppl");
		abbrMap.put("supplements", "suppl");
		abbrMap.put("surgery", "surg");
		abbrMap.put("surgeries", "surg");
		abbrMap.put("survey", "surv");
		abbrMap.put("surveys", "surv");
		abbrMap.put("sweep", "swp");
		abbrMap.put("swept", "swp");
		abbrMap.put("sweeping", "swp");
		abbrMap.put("sweeps", "swp");
		abbrMap.put("swimming", "swim");
		abbrMap.put("swing", "swg");
		abbrMap.put("swong", "swg");
		abbrMap.put("swinging", "swg");
		abbrMap.put("swings", "swg");
		abbrMap.put("switch", "swch");
		abbrMap.put("switched", "swch");
		abbrMap.put("switching", "swch");
		abbrMap.put("switches", "swch");
		abbrMap.put("system", "syst");
		abbrMap.put("systems", "syst");
		abbrMap.put("table", "tbl");
		abbrMap.put("tables", "tbl");
		abbrMap.put("technical", "tech");
		abbrMap.put("technology", "tech");
		abbrMap.put("technologies", "tech");
		abbrMap.put("telephone", "phone");
		abbrMap.put("telephones", "phones");
		abbrMap.put("television", "TV");
		abbrMap.put("televisions", "TVs");
		abbrMap.put("temperature", "temp");
		abbrMap.put("temperatures", "temps");
		abbrMap.put("territory", "terr");
		abbrMap.put("territories", "terr");
		abbrMap.put("thanks", "THX");
		abbrMap.put("through", "thru");
		abbrMap.put("thunder", "thdr");
		abbrMap.put("ticket", "tkt");
		abbrMap.put("ticketed", "tkt");
		abbrMap.put("ticketing", "tkt");
		abbrMap.put("tickets", "tkt");
		abbrMap.put("time", "tm");
		abbrMap.put("tomorrow", "2mor");
		abbrMap.put("tonight", "2nte");
		abbrMap.put("total", "tot");
		abbrMap.put("touchdown", "TD");
		abbrMap.put("touchdowns", "TDs");
		abbrMap.put("tournament", "tourney");
		abbrMap.put("tournaments", "tournies");
		abbrMap.put("track", "trk");
		abbrMap.put("tracked", "trk");
		abbrMap.put("tracking", "trk");
		abbrMap.put("tracks", "trk");
		abbrMap.put("train", "trn");
		abbrMap.put("trained", "trn");
		abbrMap.put("training", "trng");
		abbrMap.put("trains", "trn");
		abbrMap.put("translate", "transl");
		abbrMap.put("translated", "transl");
		abbrMap.put("translating", "transl");
		abbrMap.put("translates", "transl");
		abbrMap.put("translation", "transl");
		abbrMap.put("translations", "transl");
		abbrMap.put("transaction", "trans");
		abbrMap.put("transactions", "trans");
		abbrMap.put("transfer", "xfer");
		abbrMap.put("transferred", "xfer");
		abbrMap.put("transferring", "xfer");
		abbrMap.put("transfers", "xfer");
		abbrMap.put("travel", "trvl");
		abbrMap.put("traveled", "trvl");
		abbrMap.put("traveling", "trvlg");
		abbrMap.put("travels", "trvl");
		abbrMap.put("treasury", "treas");
		abbrMap.put("treatment", "treatm");
		abbrMap.put("treatments", "treatm");
		abbrMap.put("tropical", "trop");
		abbrMap.put("turnover", "T/O");
		abbrMap.put("turnovers", "T/O");
		abbrMap.put("ultimate", "ult");
		abbrMap.put("ultimately", "ult");
		abbrMap.put("umpire", "ump");
		abbrMap.put("umpires", "umps");
		abbrMap.put("unbelievable", "unblefble");
		abbrMap.put("uncertain", "uncrtn");
		abbrMap.put("unfortunate", "un4tun8");
		abbrMap.put("universal", "unvrsl");
		abbrMap.put("university", "univ");
		abbrMap.put("universities", "univ");
		abbrMap.put("unknown", "unkn");
		abbrMap.put("unknowns", "unkn");
		abbrMap.put("update", "updt");
		abbrMap.put("updated", "updtd");
		abbrMap.put("updating", "updt");
		abbrMap.put("updates", "updt");
		abbrMap.put("unpaid", "unpd");
		abbrMap.put("usually", "usu");
		abbrMap.put("vacation", "vac");
		abbrMap.put("vacations", "vac");
		abbrMap.put("vehicle", "veh");
		abbrMap.put("vehicles", "veh");
		abbrMap.put("vendor", "vend");
		abbrMap.put("vendors", "vend");
		abbrMap.put("verbal", "vbl");
		abbrMap.put("verify", "verf");
		abbrMap.put("versus", "vs");
		abbrMap.put("very", "vry");
		abbrMap.put("violation", "vio");
		abbrMap.put("violations", "vio");
		abbrMap.put("visitor", "vis");
		abbrMap.put("visitors", "vis");
		abbrMap.put("volumne", "vol");
		abbrMap.put("volumnes", "vols");
		abbrMap.put("voucher", "vchr");
		abbrMap.put("vouchers", "vchr");
		abbrMap.put("vulgar", "vulg");
		abbrMap.put("weather", "wea");
		abbrMap.put("week", "wk");
		abbrMap.put("weekend", "w/end");
		abbrMap.put("weeks", "wks");
		abbrMap.put("weight", "wt");
		abbrMap.put("weights", "wt");
		abbrMap.put("welcome", "wlcm");
		abbrMap.put("why", "Y");
		abbrMap.put("winter", "wint");
		abbrMap.put("wisdom", "wisd");
		abbrMap.put("with", "w/");
		abbrMap.put("withdrawal", "wdrl");
		abbrMap.put("withdrawals", "wdrl");
		abbrMap.put("withhold", "whld");
		abbrMap.put("without", "w/o");
		abbrMap.put("women", "wmn");
		abbrMap.put("word", "wd");
		abbrMap.put("words", "wds");
		abbrMap.put("work", "wrk");
		abbrMap.put("worked", "wrk");
		abbrMap.put("working", "wrk");
		abbrMap.put("works", "wrk");
		abbrMap.put("yard", "yd");
		abbrMap.put("yards", "yd");
		abbrMap.put("year", "yr");
		abbrMap.put("years", "yrs");
		abbrMap.put("you", "u");
		abbrMap.put("you're", "UR");
		abbrMap.put("zone", "zn");
		abbrMap.put("zones", "zn");
		
		return abbrMap;
	}
	
	// attempts to preserve punctuation, but not very sophisticated as of yet
	// attempts to preserve case of first letter in word
	public static String abbreviate(String theInput) {
		StringBuffer sb = new StringBuffer();
		StringTokenizer st = new StringTokenizer(theInput);
		Boolean isFirstWord = true;
		while (st.hasMoreTokens()) {
			String word = st.nextToken();
			
			if(isFirstWord) {
				isFirstWord = false;
			} else {
				sb.append(" ");
			}
			
			if(word.length() < 2) {
				sb.append(word);
			} else {
				String firstChar = null;
				String lastChar = null;
				// no processing of special characters unless word is at least 3 chars: 1 special char and 2 more for possible abbreviation
				if(word.length() > 2) {
					firstChar = word.substring(0, 1);
					if(firstChar.equals("[") || firstChar.equals("(") || firstChar.equals("'") || firstChar.equals("\"") || 
					   firstChar.equals("{") || firstChar.equals("<")) {
						word = word.substring(1, word.length());
					} else {
						firstChar = null;
					}
					
					if(word.length() > 2) {
						lastChar = word.substring(word.length()-1);
						if(lastChar.equals(",") || lastChar.equals(".") || lastChar.equals("?") || lastChar.equals("!") || 
						   lastChar.equals(":") || lastChar.equals(";") || lastChar.equals("]") || lastChar.equals(")") ||
						   lastChar.equals("'") || lastChar.equals("\"") || lastChar.equals("}") || lastChar.equals(">")) {
							word = word.substring(0, word.length()-1);
						} else {
							lastChar = null;
						}
					}
				}
				
				Boolean isUpperCase = startsWithUpperCase(word);
				
				if(firstChar != null) {sb.append(firstChar);}
				String abbr = abbreviations.get(word.toLowerCase());
				if(abbr != null) {
					if(isUpperCase) {abbr = capitalize(abbr);}
					sb.append(abbr);
				}
				else {
					sb.append(word);
				}
				if(lastChar != null) {sb.append(lastChar);}
			}
		}
		
		return sb.toString();
	}
	
	private static boolean startsWithUpperCase(String theWord) {
		char[] charArray;
		charArray = theWord.toCharArray();
		if (Character.isUpperCase(charArray[0])) {return true;}
		else {return false;}
	}

	
	// capitalizes the first letter -- leaves the rest of the word as is
	private static String capitalize(String theWord) {
		String firstLetter = theWord.substring(0,1);  // Get first letter
        String remainder   = theWord.substring(1);    // Get remainder of word.
        return firstLetter.toUpperCase() + remainder;	}
}
